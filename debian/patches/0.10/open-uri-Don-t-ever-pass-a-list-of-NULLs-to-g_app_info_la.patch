From: Mario Sanchez Prada <mario@endlessm.com>
Date: Thu, 7 Dec 2017 14:40:14 +0000
Subject: open-uri: Don't ever pass a list of NULLs to
 g_app_info_launch_uris()

Add extra checks to never do this when registering the URI with the
documents portal (for sandboxed handler) fails for any reason, and
report to the sandboxed caller accordingly when that happens.

Bug: https://github.com/flatpak/xdg-desktop-portal/issues/134
Origin: upstream, 0.10, commit:3b53ed156d102c893bd592972d3133638711eaff
---
 src/open-uri.c | 30 ++++++++++++++++++++----------
 1 file changed, 20 insertions(+), 10 deletions(-)

diff --git a/src/open-uri.c b/src/open-uri.c
index c80f3cd..cec48e1 100644
--- a/src/open-uri.c
+++ b/src/open-uri.c
@@ -177,7 +177,7 @@ is_sandboxed (GDesktopAppInfo *info)
   return strstr (exec, "flatpak run ") != NULL;
 }
 
-static void
+static gboolean
 launch_application_with_uri (const char *choice_id,
                              const char *uri,
                              const char *parent_window,
@@ -191,8 +191,15 @@ launch_application_with_uri (const char *choice_id,
 
   if (is_sandboxed (info))
     {
+      g_autoptr(GError) error = NULL;
+
       g_debug ("registering %s for %s", uri, choice_id);
-      ruri = register_document (uri, choice_id, FALSE, writable, NULL);
+      ruri = register_document (uri, choice_id, FALSE, writable, &error);
+      if (ruri == NULL)
+        {
+          g_warning ("Error registering %s for %s: %s", uri, choice_id, error->message);
+          return FALSE;
+        }
     }
   else
     ruri = g_strdup (uri);
@@ -204,6 +211,8 @@ launch_application_with_uri (const char *choice_id,
 
   g_debug ("launching %s %s", choice_id, ruri);
   g_app_info_launch_uris (G_APP_INFO (info), &uris, context, NULL);
+
+  return TRUE;
 }
 
 static void
@@ -287,8 +296,8 @@ send_response_in_thread_func (GTask *task,
       writable = GPOINTER_TO_INT (g_object_get_data (G_OBJECT (request), "writable"));
       content_type = (const char *)g_object_get_data (G_OBJECT (request), "content-type");
 
-      launch_application_with_uri (choice, uri, parent_window, writable);
-      update_permissions_store (request->app_id, content_type, choice);
+      if (launch_application_with_uri (choice, uri, parent_window, writable))
+        update_permissions_store (request->app_id, content_type, choice);
     }
 
 out:
@@ -526,15 +535,16 @@ handle_open_in_thread_func (GTask *task,
   if (skip_app_chooser || (!always_ask && (latest_count >= latest_threshold)))
     {
       /* If a recommended choice is found, just use it and skip the chooser dialog */
-      launch_application_with_uri (skip_app_chooser ? choices[0] : latest_id,
-                                   uri,
-                                   parent_window,
-                                   writable);
-
+      gboolean result = launch_application_with_uri (skip_app_chooser ? choices[0] : latest_id,
+                                                     uri,
+                                                     parent_window,
+                                                     writable);
       if (request->exported)
         {
           g_variant_builder_init (&opts_builder, G_VARIANT_TYPE_VARDICT);
-          xdp_request_emit_response (XDP_REQUEST (request), 0, g_variant_builder_end (&opts_builder));
+          xdp_request_emit_response (XDP_REQUEST (request),
+                                     result ? XDG_DESKTOP_PORTAL_RESPONSE_SUCCESS : XDG_DESKTOP_PORTAL_RESPONSE_OTHER,
+                                     g_variant_builder_end (&opts_builder));
           request_unexport (request);
         }
       return;
